package com.fqyuan.search;

import java.util.Arrays;
import java.util.Random;

import org.junit.Test;

public class InterpolateSearch {
	public static int interpolateSearchNonRec(int[] arr, int target) {
		int low = 0;
		int high = arr.length - 1;
		int mid;

		while (target >= arr[low] && target <= arr[high]) {
			if (arr[low] == arr[high])
				return (low + high) / 2;
			mid = low + (high - low) / (arr[high] - arr[low]) * (target - arr[low]);
			if (target == arr[mid])
				return mid;
			else if (target < arr[mid])
				high = mid - 1;
			else
				low = mid + 1;
		}
		return -1;
	}

	public static int interpolateSearchRec(int[] arr, int target) {
		return interpolateSearchRec(arr, target, 0, arr.length - 1);
	}

	private static int interpolateSearchRec(int[] arr, int target, int low, int high) {
		if (target == arr[low])
			return low;
		else if (low == high || arr[low] == arr[high])
			return -1;

		int mid = low + (high - low) / (arr[high] - arr[low]) * (target - arr[low]);

		if (arr[mid] == target)
			return mid;
		else if (target < arr[mid])
			return interpolateSearchRec(arr, target, low, mid - 1);
		else
			return interpolateSearchRec(arr, target, mid + 1, high);

	}
	
	@Test
	public void test() {
		int[] arr = new int[100];
		Random random = new Random();
		for (int i = 0; i < arr.length; i++)
			arr[i] = random.nextInt(arr.length);
		Arrays.sort(arr);
		SearchUtils.printArr(arr);
		if (interpolateSearchRec(arr, 50) != -1)
			System.out.println("Found 50 at: " + interpolateSearchRec(arr, 50));
		else
			System.out.println("Not found.");
	}
}