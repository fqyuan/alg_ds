package com.fqyuan.math;

import java.util.ArrayList;

import org.omg.CORBA.ORBPackage.InconsistentTypeCode;

public class InsideRec {
	public int cntInsideRec(ArrayList<Integer> A, ArrayList<Integer> B, ArrayList<Integer> C, ArrayList<Integer> D) {
		return 0;
	}

	private  double recArea(int x1, int y1, int x2, int y2, int x3, int y3) {
		double area = (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) / 2;

		if (area < 0)
			area *= -1;
		return area;
	}
	private boolean isInRec(int x, int y, ArrayList<Integer> C, ArrayList<Integer> D){
		int x1 = C.get(0), x2 = C.get(1), x3 = C.get(2), x4 = C.get(3);
		int y1 = D.get(0), y2 = D.get(1), y3 = D.get(2), y4 = D.get(3);
		
		double oriArea = recArea(x1, y1, x2, y2, x3, y3);
		double newArea = 0;
		newArea += recArea(x,y,x1,y1,x2,y2)/2;
		newArea += recArea(x, y, x1, y1, x4, y4)/2;
		newArea += recArea(x, y, x2, y2, x3, y3)/2;
		newArea += recArea(x, y, x3, y3, x4, y4)/2;
		
	}
}
