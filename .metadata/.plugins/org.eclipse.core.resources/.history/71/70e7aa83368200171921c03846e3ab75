package com.fqyuan.sort;

import static com.fqyuan.utils.Utils.genRanArr;
import static com.fqyuan.utils.Utils.printArr;

import java.util.Collections;
import java.util.LinkedList;

import org.junit.Test;

public class BucketSort {
	public void bucketSort(int[] arr) {
		// 1. Initial the buckets.
		final int bucketCnt = 10;
		LinkedList<Integer>[] buckets = new LinkedList[bucketCnt];
		for (int i = 0; i < bucketCnt; i++)
			buckets[i] = new LinkedList<>();
		// 2. Scatter the elements into the buckets.
		int minVal = arr[0], maxVal = arr[0];
		for (int val : arr) {
			if (val < minVal)
				minVal = val;
			if (val > maxVal)
				maxVal = val;
		}
		double interval = ((double) (maxVal - minVal + 1)) / bucketCnt;
		for (int val : arr) {
			int bucket = (int) ((val - minVal) / interval);
			buckets[bucket].add(val);
		}
		// 3. Sort each bucktes element.
		for (LinkedList<Integer> list : buckets)
			Collections.sort(list);
		// 4. Gather the array.
		int index = 0;
		for(LinkedList<Integer>list: buckets){
			while(!list.isEmpty())
				arr[index++]= list.remove();
		}
	}
	@Test
	public void test() {
		int len = 20;
		int[] arr = genRanArr(len);
		printArr(arr);
		bucketSort(arr);
		printArr(arr);
	}
}
